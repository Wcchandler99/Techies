_task_common: &task_common
  human_input: false
  async_execution: false

html5_game_coding:
  <<: *task_common
  agent: html5_game_architect
  description: >
    Read the game hierarchy file "game_hierarchy.xml" to understand the game hierarchy, specifications and details.
    Write a perfect HTML5, CSS, and JavaScript code.
    Make sure that the final code represent a complete and playable game as detailed in the game layout and specifications.
    Everytime you delegate a task tell the coworker to save their work.
    Test the code after every time you delegate a task.
    Delegate the task of coding the different parts of the game and saving this code to a file to the most fitting agents.
    Have the agents save there work to a file after each change.
    After each cowork returns there work delegate the task of testing that work to the html5_game_tester agent.
    For any tasks that do not fit any specialized agents, delegate the task to the html5_game_engineer agent.
    Agents must be conscious of their coworkers' code, and must ensure they refer to already exisiting components. If a necessary component does not exist, create it in the code or delegate the task of doing so to the right agent.
    Delegate the task of reviewing the code and giving feedback to the html5_game_reviewer.
    Do not finalize your answer until the html5_game_reviewer says the game is complete and playable, and you have met all requirements.
    Your final output should include code in a single file for the game and only HTML5 code for the game.
  expected_output: >
    Your final answer should be a single file game.html that contains the complete game code inlcuding html, javascript and CSS.
  output_file: game.html

# vim: set foldmethod=indent foldlevel=0:
